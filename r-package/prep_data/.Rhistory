install.packages(c("beepr", "furrr", "future", "geobr", "lwgeom", "magrittr", "mapview", "sf"))
library(geobr)
library(magrittr)
library(sf)
library(beepr)
library(furrr)
library(mapview)
# library(rmapshaper)
library(magrittr)
simplify_gpkg <- function(file_address, tolerance=100){
# get address of original file
simplified_file_address <- file_address
original_file_address <- gsub('_simplified.gpkg', '.gpkg', simplified_file_address)
# read original file
temp_gpkg <- sf::st_read(original_file_address)
# simplify with tolerance
temp_gpkg_simplified <- sf::st_transform(temp_gpkg, crs=3857)
temp_gpkg_simplified <- sf::st_simplify(temp_gpkg_simplified, preserveTopology = T, dTolerance = tolerance)
temp_gpkg_simplified <- sf::st_transform(temp_gpkg_simplified, crs=4674)
# Make any invalid geometry valid # st_is_valid( sf)
temp_gpkg_simplified <- lwgeom::st_make_valid(temp_gpkg_simplified)
as.numeric(object.size(temp_gpkg_simplified)) / as.numeric(object.size(temp_gpkg)) # reducao em __ vezes
mapview(temp_gpkg) + temp_gpkg_simplified
# delete previous file
message('deleting old file')
file.remove(simplified_file_address)
# save simplified file
message('saving new file')
sf::st_write(temp_gpkg_simplified, simplified_file_address, quiet = TRUE)
}
# list all simplified data sets
simplified_files <- list.files(path = '//storage1/geobr/data_gpkg', pattern = 'simplified', recursive = T, full.names = T)
simplified_files
head(simplified_files)
simplified_files[1:3]
furrr::future_map(.x=simplified_files[1:3], .f = simplify_gpkg)
library(geobr)
a <- read_biomes(year=20000)
a <- read_biomes(year=2019)
a <- read_biomes(year=2004)
system.tim(a <- read_biomes(year=2004))
system.time(a <- read_biomes(year=2004))
system.time(a <- read_biomes(year=2009))
system.time(a <- read_biomes(year=2019))
system.time(a <- read_biomes(year=2019, tp='original'))
system.time(a <- read_biomes(year=2019))
gc(reset = T)
simplify_gpkg <- function(file_address, tolerance=100){
# get address of original file
simplified_file_address <- file_address
original_file_address <- gsub('_simplified.gpkg', '.gpkg', simplified_file_address)
# read original file
temp_gpkg <- sf::st_read(original_file_address)
# simplify with tolerance
temp_gpkg_simplified <- sf::st_transform(temp_gpkg, crs=3857)
temp_gpkg_simplified <- sf::st_simplify(temp_gpkg_simplified, preserveTopology = T, dTolerance = tolerance)
temp_gpkg_simplified <- sf::st_transform(temp_gpkg_simplified, crs=4674)
# Make any invalid geometry valid # st_is_valid( sf)
temp_gpkg_simplified <- lwgeom::st_make_valid(temp_gpkg_simplified)
as.numeric(object.size(temp_gpkg_simplified)) / as.numeric(object.size(temp_gpkg)) # reducao em __ vezes
mapview(temp_gpkg) + temp_gpkg_simplified
# delete previous file
message('deleting old file')
file.remove(simplified_file_address)
# save simplified file
message('saving new file')
sf::st_write(temp_gpkg_simplified, simplified_file_address, quiet = TRUE)
}
# list all simplified data sets
simplified_files <- list.files(path = '//storage1/geobr/data_gpkg', pattern = 'simplified', recursive = T, full.names = T)
# aplicar funcao em paralelo
future::plan(future::multiprocess)
furrr::future_map(.x=simplified_files, .f = simplify_gpkg, .progress = T)
library(pbapply)
install.packages('pbapply')
simplify_gpkg <- function(file_address, tolerance=100){
message(file_address)
# get address of original file
simplified_file_address <- file_address
original_file_address <- gsub('_simplified.gpkg', '.gpkg', simplified_file_address)
# read original file
temp_gpkg <- sf::st_read(original_file_address)
# simplify with tolerance
temp_gpkg_simplified <- sf::st_transform(temp_gpkg, crs=3857)
temp_gpkg_simplified <- sf::st_simplify(temp_gpkg_simplified, preserveTopology = T, dTolerance = tolerance)
temp_gpkg_simplified <- sf::st_transform(temp_gpkg_simplified, crs=4674)
# Make any invalid geometry valid # st_is_valid( sf)
temp_gpkg_simplified <- lwgeom::st_make_valid(temp_gpkg_simplified)
as.numeric(object.size(temp_gpkg_simplified)) / as.numeric(object.size(temp_gpkg)) # reducao em __ vezes
mapview(temp_gpkg) + temp_gpkg_simplified
# delete previous file
message('deleting old file')
file.remove(simplified_file_address)
# save simplified file
message('saving new file')
sf::st_write(temp_gpkg_simplified, simplified_file_address, quiet = TRUE)
}
# list all simplified data sets
simplified_files <- list.files(path = '//storage1/geobr/data_gpkg', pattern = 'simplified', recursive = T, full.names = T)
pbapply::pblapply(X=simplified_files[1:4], FUN = simplify_gpkg)
simplify_gpkg <- function(file_address, tolerance=100){
message(file_address)
# get address of original file
simplified_file_address <- file_address
original_file_address <- gsub('_simplified.gpkg', '.gpkg', simplified_file_address)
# read original file
temp_gpkg <- sf::st_read(original_file_address, quiet=T)
# simplify with tolerance
temp_gpkg_simplified <- sf::st_transform(temp_gpkg, crs=3857)
temp_gpkg_simplified <- sf::st_simplify(temp_gpkg_simplified, preserveTopology = T, dTolerance = tolerance)
temp_gpkg_simplified <- sf::st_transform(temp_gpkg_simplified, crs=4674)
# Make any invalid geometry valid # st_is_valid( sf)
temp_gpkg_simplified <- lwgeom::st_make_valid(temp_gpkg_simplified)
as.numeric(object.size(temp_gpkg_simplified)) / as.numeric(object.size(temp_gpkg)) # reducao em __ vezes
mapview(temp_gpkg) + temp_gpkg_simplified
# delete previous file
message('deleting old file')
file.remove(simplified_file_address)
# save simplified file
message('saving new file')
sf::st_write(temp_gpkg_simplified, simplified_file_address, quiet = TRUE)
}
# list all simplified data sets
simplified_files <- list.files(path = '//storage1/geobr/data_gpkg', pattern = 'simplified', recursive = T, full.names = T)
# i core
pbapply::pblapply(X=simplified_files[1:4], FUN = simplify_gpkg)
simplified_files[4]
# get address of original file
simplified_file_address <- file_address <- simplified_files[4]
original_file_address <- gsub('_simplified.gpkg', '.gpkg', simplified_file_address)
# read original file
temp_gpkg <- sf::st_read(original_file_address, quiet=T)
# simplify with tolerance
temp_gpkg_simplified <- sf::st_transform(temp_gpkg, crs=3857)
temp_gpkg_simplified <- sf::st_simplify(temp_gpkg_simplified, preserveTopology = T, dTolerance = tolerance)
tolerance=100
# read original file
temp_gpkg <- sf::st_read(original_file_address, quiet=T)
# simplify with tolerance
temp_gpkg_simplified <- sf::st_transform(temp_gpkg, crs=3857)
temp_gpkg_simplified <- sf::st_simplify(temp_gpkg_simplified, preserveTopology = T, dTolerance = tolerance)
temp_gpkg_simplified <- sf::st_transform(temp_gpkg_simplified, crs=4674)
# Make any invalid geometry valid # st_is_valid( sf)
temp_gpkg_simplified <- lwgeom::st_make_valid(temp_gpkg_simplified)
# Make any invalid geometry valid # st_is_valid( sf)
temp_gpkg_simplified <- lwgeom::st_make_valid(temp_gpkg_simplified)
# delete previous file
message('deleting old file')
file.remove(simplified_file_address)
# save simplified file
message('saving new file')
sf::st_write(temp_gpkg_simplified, simplified_file_address, quiet = TRUE)
head(temp_gpkg_simplified)
mapview(temp_gpkg_simplified)
simplify_gpkg <- function(file_address, tolerance=100){
message(file_address)
# get address of original file
simplified_file_address <- file_address
original_file_address <- gsub('_simplified.gpkg', '.gpkg', simplified_file_address)
# read original file
temp_gpkg <- sf::st_read(original_file_address, quiet=T)
# simplify with tolerance
temp_gpkg_simplified <- sf::st_transform(temp_gpkg, crs=3857)
temp_gpkg_simplified <- sf::st_simplify(temp_gpkg_simplified, preserveTopology = T, dTolerance = tolerance)
temp_gpkg_simplified <- sf::st_transform(temp_gpkg_simplified, crs=4674)
# Make any invalid geometry valid # st_is_valid( sf)
temp_gpkg_simplified <- lwgeom::st_make_valid(temp_gpkg_simplified)
# as.numeric(object.size(temp_gpkg_simplified)) / as.numeric(object.size(temp_gpkg)) # reducao em __ vezes
# mapview(temp_gpkg) + temp_gpkg_simplified
# delete previous file
message('deleting old file')
file.remove(simplified_file_address)
# save simplified file
message('saving new file')
sf::st_write(temp_gpkg_simplified, simplified_file_address, quiet = TRUE)
}
# list all simplified data sets
simplified_files <- list.files(path = '//storage1/geobr/data_gpkg', pattern = 'simplified', recursive = T, full.names = T)
# i core
pbapply::pblapply(X=simplified_files, FUN = simplify_gpkg)
