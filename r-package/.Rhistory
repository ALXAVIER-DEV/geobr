2+2
library(geobr)
library(dplyr)
library(ggplot2)
library(sf)
library(ggthemes)
# download sf of Brazilian states
states <- read_state(code_state = 'all')
# download metro areas sf and pille them up
download_metro <- function(y){
tmp <- read_metro_area(year = y) %>% select(name_metro, abbrev_state, geometry)
tmp$year <- y
return(tmp)
}
metros_sf <- lapply(X= c(1970, 2001, 2018), FUN=download_metro) %>% do.call('rbind', .)
ggplot() +
geom_sf(data=states, color="gray90", fill="gray80", size=.4) +
geom_sf(data=metros_sf, aes(color=as.factor(name_metro), fill=as.factor(name_metro)), show.legend = FALSE) +
facet_wrap(~year, nrow = 1) +
theme_map() +
theme( strip.background = element_rect(colour = "white", fill = "white"),
strip.text.x = element_text(size = 8, face ="bold"))
library(roxygen2)
library(devtools)
library(usethis)
3+3
2+2
2+2
list_geobr()
a <- list_geobr()
View(a)
library(sf)
library(readr)
library(geobr)
library(R.utils)
library(microbenchmark)
library(beepr)
library(sf)
library(readr)
library(geobr)
library(R.utils)
library(microbenchmark)
library(beepr)
mbm <- microbenchmark::microbenchmark(times = 30,
### RDS  -------------------------------------
'rds' = { # files
files_rds <- c('http://www.ipea.gov.br/geobr/tests/rds/ac.rds',
'http://www.ipea.gov.br/geobr/tests/rds/am.rds',
'http://www.ipea.gov.br/geobr/tests/rds/ap.rds')
# download files
lapply(X=files_rds, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_rds,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
files <- lapply(X=files, FUN= readr::read_rds)
shape <- do.call('rbind', files)
},
### GPKG  -------------------------------------
'gpkg' = { # files
files_gpkg <- c('http://www.ipea.gov.br/geobr/tests/gpkg/ac.gpkg',
'http://www.ipea.gov.br/geobr/tests/gpkg/am.gpkg',
'http://www.ipea.gov.br/geobr/tests/gpkg/ap.gpkg')
# download files
lapply(X=files_gpkg, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_gpkg,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
files <- lapply(X=files, FUN= sf::st_read)
shape <- do.call('rbind', files)
},
### GPKG_zip  -------------------------------------
'gpkg_zip' = { # files
files_gpkg_zip <- c('http://www.ipea.gov.br/geobr/tests/gpkg/ac.gpkg.gz',
'http://www.ipea.gov.br/geobr/tests/gpkg/am.gpkg.gz',
'http://www.ipea.gov.br/geobr/tests/gpkg/ap.gpkg.gz')
# download files
lapply(X=files_gpkg_zip, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_gpkg_zip,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
gpkg_fun <- function( zipf){
# zipf <- files[1]
# zipf = zipado
# paste0(stringr::str_match(zipf[1], "gpkg/(.*?).gpkg")[2],".gpkg")
# temp file
tempf <- file.path(tempdir(), paste0(stringr::str_match(zipf, "/(.*?).gpkg.gz")[2],".gpkg") )
# unzip
R.utils::gunzip(zipf, remove=F, overwrite=T, tempf)
# read
a <- sf::st_read(dsn=tempf,  quiet = TRUE)
return(a)
files <- list.files(tempdir(), full.names = T, pattern = "^file")
file.remove(files)
}
files <- lapply(X=files, FUN= gpkg_fun)
shape <- do.call('rbind', files)
},
### geojson_zip -------------------------------------
'geojson_zip' = { # files
files_geojson_zip <- c('http://www.ipea.gov.br/geobr/tests/geojson/ac.geojson.gz',
'http://www.ipea.gov.br/geobr/tests/geojson/am.geojson.gz',
'http://www.ipea.gov.br/geobr/tests/geojson/ap.geojson.gz')
# download files
lapply(X=files_geojson_zip, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_geojson_zip,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
geojson_fun <- function( zipf){
# zipf <- files[1]
# zipf = zipado
# paste0(stringr::str_match(zipf[1], "geojson/(.*?).geojson")[2],".geojson")
# temp file
tempf <- file.path(tempdir(), paste0(stringr::str_match(zipf, "/(.*?).geojson.gz")[2],".geojson") )
# unzip
R.utils::gunzip(zipf, remove=F, overwrite=T, tempf)
# read
a <- sf::st_read(dsn=tempf,  quiet = TRUE)
return(a)
files <- list.files(tempdir(), full.names = T, pattern = "^file")
file.remove(files)
}
files <- lapply(X=files, FUN= geojson_fun)
shape <- do.call('rbind', files)
},
### geojson  -------------------------------------
'geojson' = { # files
files_geojson <- c('http://www.ipea.gov.br/geobr/tests/geojson/ac.geojson',
'http://www.ipea.gov.br/geobr/tests/geojson/am.geojson',
'http://www.ipea.gov.br/geobr/tests/geojson/ap.geojson')
# download files
lapply(X=files_geojson, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_geojson,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
files <- lapply(X=files, FUN= sf::st_read)
shape <- do.call('rbind', files)
}
)
beepr::beep()
# plot result
ggplot2::autoplot(mbm)
ggplot2::autoplot(mbm) %>% ggsave('benchmark_r_rafa.png', width = 10, height = 10, units = cm")
ggplot2::autoplot(mbm) %>% ggsave(filename='benchmark_r_rafa.png', width = 10, height = 10, units = "cm")
ggplot2::autoplot(mbm) %>% ggsave(filename='benchmark_r_rafa.png', width = 10, height = 10, units = "cm")
# plot result
ggplot2::autoplot(mbm) %>% ggsave(filename='benchmark_r_rafa.png', width = 15, height = 10, units = "cm")
# plot result
ggplot2::autoplot(mbm) %>% ggsave(filename='benchmark_r_rafa.png', width = 13, height = 10, units = "cm")
# plot result
ggplot2::autoplot(mbm) %>% ggsave(filename='benchmark_r_rafa.png', width = 12, height = 10, units = "cm")
mbm <- microbenchmark::microbenchmark(times = 30,
### RDS  -------------------------------------
'rds' = { # files
files_rds <- c('http://www.ipea.gov.br/geobr/tests/rds/ac.rds',
'http://www.ipea.gov.br/geobr/tests/rds/am.rds',
'http://www.ipea.gov.br/geobr/tests/rds/ap.rds')
# download files
lapply(X=files_rds, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_rds,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
files <- lapply(X=files, FUN= readr::read_rds)
shape <- do.call('rbind', files)
},
### GPKG  -------------------------------------
'gpkg' = { # files
files_gpkg <- c('http://www.ipea.gov.br/geobr/tests/gpkg/ac.gpkg',
'http://www.ipea.gov.br/geobr/tests/gpkg/am.gpkg',
'http://www.ipea.gov.br/geobr/tests/gpkg/ap.gpkg')
# download files
lapply(X=files_gpkg, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_gpkg,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
files <- lapply(X=files, FUN= sf::st_read)
shape <- do.call('rbind', files)
},
### GPKG_zip  -------------------------------------
'gpkg_zip' = { # files
files_gpkg_zip <- c('http://www.ipea.gov.br/geobr/tests/gpkg/ac.gpkg.gz',
'http://www.ipea.gov.br/geobr/tests/gpkg/am.gpkg.gz',
'http://www.ipea.gov.br/geobr/tests/gpkg/ap.gpkg.gz')
# download files
lapply(X=files_gpkg_zip, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_gpkg_zip,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
gpkg_fun <- function( zipf){
# zipf <- files[1]
# zipf = zipado
# paste0(stringr::str_match(zipf[1], "gpkg/(.*?).gpkg")[2],".gpkg")
# temp file
tempf <- file.path(tempdir(), paste0(stringr::str_match(zipf, "/(.*?).gpkg.gz")[2],".gpkg") )
# unzip
R.utils::gunzip(zipf, remove=F, overwrite=T, tempf)
# read
a <- sf::st_read(dsn=tempf,  quiet = TRUE)
return(a)
files <- list.files(tempdir(), full.names = T, pattern = "^file")
file.remove(files)
}
files <- lapply(X=files, FUN= gpkg_fun)
shape <- do.call('rbind', files)
},
### geojson_zip -------------------------------------
'geojson_zip' = { # files
files_geojson_zip <- c('http://www.ipea.gov.br/geobr/tests/geojson/ac.geojson.gz',
'http://www.ipea.gov.br/geobr/tests/geojson/am.geojson.gz',
'http://www.ipea.gov.br/geobr/tests/geojson/ap.geojson.gz')
# download files
lapply(X=files_geojson_zip, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_geojson_zip,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
geojson_fun <- function( zipf){
# zipf <- files[1]
# zipf = zipado
# paste0(stringr::str_match(zipf[1], "geojson/(.*?).geojson")[2],".geojson")
# temp file
tempf <- file.path(tempdir(), paste0(stringr::str_match(zipf, "/(.*?).geojson.gz")[2],".geojson") )
# unzip
R.utils::gunzip(zipf, remove=F, overwrite=T, tempf)
# read
a <- sf::st_read(dsn=tempf,  quiet = TRUE)
return(a)
files <- list.files(tempdir(), full.names = T, pattern = "^file")
file.remove(files)
}
files <- lapply(X=files, FUN= geojson_fun)
shape <- do.call('rbind', files)
},
### geojson  -------------------------------------
'geojson' = { # files
files_geojson <- c('http://www.ipea.gov.br/geobr/tests/geojson/ac.geojson',
'http://www.ipea.gov.br/geobr/tests/geojson/am.geojson',
'http://www.ipea.gov.br/geobr/tests/geojson/ap.geojson')
# download files
lapply(X=files_geojson, function(x) httr::GET(url=x, httr::progress(),
httr::write_disk(paste0(tempdir(),"/", unlist(lapply(strsplit(x,"/"),tail,n=1L))), overwrite = T)) )
# read files and pile them up
files <- unlist(lapply(strsplit(files_geojson,"/"), tail, n = 1L))
files <- paste0(tempdir(),"/",files)
files <- lapply(X=files, FUN= sf::st_read)
shape <- do.call('rbind', files)
}
)
beepr::beep()
# plot result
ggplot2::autoplot(mbm)
####### BENCHMARK Download and Reading files ---------------------
devtools::install_github("hrbrmstr/speedtest")
speedtest::spd_test()
install.packages('pingr')
install.packages('speedtest')
library(speedtest)
####### BENCHMARK Download and Reading files ---------------------
install.packages("speedtest", repos = "https://cinc.rud.is")
speedtest::spd_test()
library(speedtest)
